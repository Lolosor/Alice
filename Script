local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Cave"))()
local Window = Library.CreateLib("Alice Hub", "Synapse")
local Tab = Window:NewTab("Main")
local Section = Tab:NewSection("Characters FE")
Section:NewButton("Saitama To Gojo", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Saitama%20to%20gojo"))()
end)
Section:NewButton("Saitama To M1 Master", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/M1%20Master"))()
end)
Section:NewButton("Garou To Combat", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Combat"))()
end)
Section:NewButton("Garou To Sukuna", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Sukuna"))()
end)
Section:NewButton("Garou To Cosmic Garou", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Cosmic%20Garou%20Glitcher"))()
end)
Section:NewButton("Garou To Goku", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Goku"))()
end)
Section:NewButton("Saitama To KJ", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/KJ"))()
end)
local Tab = Window:NewTab("Animations")
local Section = Tab:NewSection("Animations")
Section:NewButton("Alice Animations", "By allah_isthebest/Alice", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Anima"))()
end)
local Tab = Window:NewTab("Fun")
local Section = Tab:NewSection("Fun")
Section:NewButton("Head View", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Fi"))()
end)
Section:NewButton("Torso View", "", function()
    
end)
Section:NewButton("Right Arm View", "", function()
    
end)
Section:NewButton("Left Arm View", "", function()
    
end)
Section:NewButton("Right Leg View", "", function()
    
end)
Section:NewButton("Left Leg View", "", function()
    
end)
local Section = Tab:NewSection("Weakest Dummy")
Section:NewButton("Head View", "", function()
    
end)
Section:NewButton("Torso View", "", function()
    
end)
Section:NewButton("Right Arm View", "", function()
    
end)
Section:NewButton("Left Arm View", "", function()
    
end)
Section:NewButton("Right Leg View", "", function()
    
end)
Section:NewButton("Left Leg View", "", function()
    
end)
local Section = Tab:NewSection("Players")
Section:NewDropdown("Selected Player", "", {"Option 1", "Option 2", "Option 3"}, function(currentOption)
    
end)
Section:NewButton("Head View", "", function()
    
end)
Section:NewButton("Torso View", "", function()
    
end)
Section:NewButton("Right Arm View", "", function()
    
end)
Section:NewButton("Left Arm View", "", function()
    
end)
Section:NewButton("Right Leg View", "", function()
    
end)
Section:NewButton("Left Leg View", "", function()
    
end)
local Tab = Window:NewTab("Misc")
local Section = Tab:NewSection("Misc")
local isWalkSpeedEnabled = false -- Toggle state (off by default)
local previousWalkSpeed -- Variable to store the previous walk speed
local walkSpeedLoop -- Variable to hold the loop thread

-- Create the textbox for walk speed
Section:NewTextBox("WalkSpeed", "Enter the speed you want", function(value)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    -- Function to continuously enforce WalkSpeed if toggle is enabled
    local function enforceWalkSpeed()
        while isWalkSpeedEnabled do
            -- Ensure the Humanoid is valid
            if humanoid then
                humanoid.WalkSpeed = value -- Apply the entered speed
            end
            wait(0.1) -- Adjust the frequency as needed
        end
    end

    -- Connect to the CharacterAdded event to handle respawns
    player.CharacterAdded:Connect(function(char)
        humanoid = char:WaitForChild("Humanoid")
    end)

    -- Start the enforcement loop when the toggle is on
    if isWalkSpeedEnabled then
        walkSpeedLoop = coroutine.create(enforceWalkSpeed)
        coroutine.resume(walkSpeedLoop)
    end
end)

-- Create the toggle to enable/disable walk speed modification
Section:NewToggle("Enable WalkSpeed", "Toggle WalkSpeed enforcement", function(state)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    if state then
        -- Store the current walk speed before applying the new one
        previousWalkSpeed = humanoid.WalkSpeed
        isWalkSpeedEnabled = true

        -- Start the enforcement loop
        walkSpeedLoop = coroutine.create(function()
            while isWalkSpeedEnabled do
                if humanoid then
                    humanoid.WalkSpeed = previousWalkSpeed -- Ensure walk speed is enforced
                end
                wait(0.1)
            end
        end)
        coroutine.resume(walkSpeedLoop)

    else
        -- When toggled off, stop the loop and reset speed to 16
        isWalkSpeedEnabled = false
        humanoid.WalkSpeed = 16 -- Reset to default speed
    end
end)
-- Variable to track whether jump power enforcement is enabled
local isJumpPowerEnabled = false
local previousJumpPower -- Variable to store the previous jump power
local jumpPowerLoop -- Variable to hold the loop thread

-- Create the textbox for jump power input
Section:NewTextBox("JumpPower", "Enter the jump power you want", function(value)
    -- Convert the input value to a number
    local newJumpPower = tonumber(value)

    -- Check if the entered value is valid
    if newJumpPower then
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")

        -- Function to continuously enforce JumpPower if toggle is enabled
        local function enforceJumpPower()
            while isJumpPowerEnabled do
                -- Ensure the Humanoid is valid
                if humanoid then
                    humanoid.JumpPower = newJumpPower -- Apply the entered jump power
                    humanoid.UseJumpPower = true
                end
                wait(0.1) -- Adjust the frequency as needed
            end
        end

        -- Start the enforcement loop if toggle is already enabled
        if isJumpPowerEnabled then
            jumpPowerLoop = coroutine.create(enforceJumpPower)
            coroutine.resume(jumpPowerLoop)
        end

        -- Update jump power when the character respawns
        player.CharacterAdded:Connect(function(char)
            humanoid = char:WaitForChild("Humanoid")
            if isJumpPowerEnabled then
                humanoid.JumpPower = newJumpPower -- Apply the jump power on respawn
                humanoid.UseJumpPower = true
            end
        end)
    else
        -- Notify the player if the input is invalid
        print("Please enter a valid number for Jump Power")
    end
end)

-- Create the toggle to enable/disable jump power modification
Section:NewToggle("Enable JumpPower", "Toggle JumpPower enforcement", function(state)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    if state then
        -- Store the current jump power before applying the new one
        previousJumpPower = humanoid.JumpPower
        isJumpPowerEnabled = true

        -- Start the enforcement loop
        jumpPowerLoop = coroutine.create(function()
            while isJumpPowerEnabled do
                if humanoid then
                    humanoid.JumpPower = previousJumpPower -- Ensure jump power is enforced
                    humanoid.UseJumpPower = true
                end
                wait(0.1)
            end
        end)
        coroutine.resume(jumpPowerLoop)

    else
        -- When toggled off, stop the loop and reset jump power to default
        isJumpPowerEnabled = false
        humanoid.JumpPower = 50 -- Reset to default jump power
        humanoid.UseJumpPower = true
    end
end)
Section:NewTextBox("FOV", "Field Of View", function()

end)
Section:NewToggle("Enable FOV", "", function()

end)
Section:NewDropdown("Selected Player", "", {"Option 1", "Option 2", "Option 3"}, function(currentOption)
    
end)
Section:NewToggle("View Selected Player", "", function(state)
    
end)
Section:NewButton("Infinite Yield", "OP FE admin commands", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Inf2"))()
end)
Section:NewButton("Dex Explorer V3", "See what's inside the game", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()
end)
Section:NewButton("Animation Logger (By ._hawda)", "Detects current played animation", function()
    loadstring(game:HttpGet("https://pastefy.app/1hmYhdIw/raw"))()
end)
Section:NewButton("Aimbot", "Locks at the nearest player's head", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/1Gp9c57U"))()
end)
Section:NewButton("Keyboard", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()
end)
Section:NewButton("Speed Tracker", "By allah_isthebest", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Lolosor/Alice/main/Speed"))()
end)
Section:NewButton("Copy play animation script", "", function()
    setclipboard([[
local player = game.Players.LocalPlayer
repeat wait() until player.Character.Humanoid
local humanoid = player.Character.Humanoid
local character = player.Character or player.CharacterAdded:Wait()
local UserInputService = game:GetService("UserInputService")

local anim2 = Instance.new("Animation")
anim2.AnimationId = "rbxassetid://enter id"

local playAnim2 = humanoid:LoadAnimation(anim2)
playAnim2:Play()
]])
end)
Section:NewButton("Copy play animation client script", "", function()
    setclipboard([[
local player = game.Players.LocalPlayer
repeat wait() until player.Character.Humanoid
local humanoid = player.Character.Humanoid
local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
local UserInputService = game:GetService("UserInputService")
debounce = false -- Activate debounce
local anim = Instance.new("Animation")
anim.AnimationId = "rbxassetid://enter id"
local playAnim = humanoid:LoadAnimation(anim)
anim.AnimationId = "rbxassetid://0" -- don't change anything here

spawn(function()
    wait(1)
    debounce = true
end)

playAnim:Play()
playAnim:AdjustSpeed(1)
wait(0.3)
playAnim:AdjustSpeed(1)

local Players = game:GetService("Players")
local Character = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()

local animationPlayed = false -- Flag to track if the animation has already been played
]])
end)
Section:NewButton("Play animations UI", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Fromonor/Ui/main/UI"))()
end)
Section:NewButton("Studs Calculator", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Fromonor/E/main/Early"))()
end)
local Tab = Window:NewTab("Visuals")
local Section = Tab:NewSection("Visuals")
Section:NewButton("Red Aura", "", function()

end)
local Tab = Window:NewTab("Maps")
local Section = Tab:NewSection("Map")
Section:NewButton("Baseplate", "", function()
    
end)
local Tab = Window:NewTab("Other Hubs")
local Section = Tab:NewSection("Hubs")
Section:NewButton("Epic Hub", "By allah_isthebest", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/frosty-601/Epic-Hub/main/Script"))()
end)
Section:NewButton("Burner Hub", "By xVicity", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/xVicity/BURNED/main/LATEST.lua'))()
end)
Section:NewButton("Animations", "By xVicity", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/Mautiku/ehh/main/strong%20guest.lua.txt'))()
end)
local Tab = Window:NewTab("Credits")
local Section = Tab:NewSection("Alice, Allah_isthebest, NetlessKJ")
Section:NewKeybind("Toggle UI", "", Enum.KeyCode.Q, function()
	Library:ToggleUI()
end)

local ToggleScreenGui = Instance.new("ScreenGui")
ToggleScreenGui.Name = "ToggleGui"
ToggleScreenGui.ResetOnSpawn = false
ToggleScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the ImageButton (Toggle)
local Toggle = Instance.new("ImageButton")
Toggle.Name = "Toggle"
Toggle.Parent = ToggleScreenGui
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Optional: Set background color if needed
Toggle.Position = UDim2.new(0.5, 80, -0, 0) -- Adjust the position as needed
Toggle.Size = UDim2.new(0, 40, 0, 40) -- Square size (change as needed)
Toggle.Image = "rbxassetid://127457301130081" -- The provided image ID
Toggle.Draggable = true -- Make the button draggable

-- Make the corners rounded (Optional)
local Corner = Instance.new("UICorner")
Corner.Parent = Toggle

-- Connect the button click to toggle the UI
Toggle.MouseButton1Click:Connect(function()
    Library:ToggleUI()
end)
